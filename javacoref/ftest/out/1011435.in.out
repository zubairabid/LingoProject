Document: ID=1011435.in (4 sentences, 61 tokens)

Sentence #1 (12 tokens):
We are talking to people about providing this same scheduling service.

Tokens:
[Text=We CharacterOffsetBegin=0 CharacterOffsetEnd=2 PartOfSpeech=PRP Lemma=we NamedEntityTag=O]
[Text=are CharacterOffsetBegin=3 CharacterOffsetEnd=6 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=talking CharacterOffsetBegin=7 CharacterOffsetEnd=14 PartOfSpeech=VBG Lemma=talk NamedEntityTag=O]
[Text=to CharacterOffsetBegin=15 CharacterOffsetEnd=17 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=people CharacterOffsetBegin=18 CharacterOffsetEnd=24 PartOfSpeech=NNS Lemma=people NamedEntityTag=O]
[Text=about CharacterOffsetBegin=25 CharacterOffsetEnd=30 PartOfSpeech=IN Lemma=about NamedEntityTag=O]
[Text=providing CharacterOffsetBegin=31 CharacterOffsetEnd=40 PartOfSpeech=VBG Lemma=provide NamedEntityTag=O]
[Text=this CharacterOffsetBegin=41 CharacterOffsetEnd=45 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=same CharacterOffsetBegin=46 CharacterOffsetEnd=50 PartOfSpeech=JJ Lemma=same NamedEntityTag=O]
[Text=scheduling CharacterOffsetBegin=51 CharacterOffsetEnd=61 PartOfSpeech=NN Lemma=scheduling NamedEntityTag=O]
[Text=service CharacterOffsetBegin=62 CharacterOffsetEnd=69 PartOfSpeech=NN Lemma=service NamedEntityTag=O]
[Text=. CharacterOffsetBegin=69 CharacterOffsetEnd=70 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (VP (VBG talking)
        (PP (TO to)
          (NP (NNS people)))
        (PP (IN about)
          (S
            (VP (VBG providing)
              (NP (DT this) (JJ same) (NN scheduling) (NN service)))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, talking-3)
nsubj(talking-3, We-1)
aux(talking-3, are-2)
case(people-5, to-4)
nmod:to(talking-3, people-5)
mark(providing-7, about-6)
advcl:about(talking-3, providing-7)
det(service-11, this-8)
amod(service-11, same-9)
compound(service-11, scheduling-10)
dobj(providing-7, service-11)
punct(talking-3, .-12)

Extracted the following NER entity mentions:

Sentence #2 (10 tokens):
APX
will probably be one of our biggest competitors.

Tokens:
[Text=APX CharacterOffsetBegin=72 CharacterOffsetEnd=75 PartOfSpeech=NNP Lemma=APX NamedEntityTag=O]
[Text=will CharacterOffsetBegin=76 CharacterOffsetEnd=80 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=probably CharacterOffsetBegin=81 CharacterOffsetEnd=89 PartOfSpeech=RB Lemma=probably NamedEntityTag=O]
[Text=be CharacterOffsetBegin=90 CharacterOffsetEnd=92 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=one CharacterOffsetBegin=93 CharacterOffsetEnd=96 PartOfSpeech=CD Lemma=one NamedEntityTag=NUMBER NormalizedNamedEntityTag=1.0]
[Text=of CharacterOffsetBegin=97 CharacterOffsetEnd=99 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=our CharacterOffsetBegin=100 CharacterOffsetEnd=103 PartOfSpeech=PRP$ Lemma=we NamedEntityTag=O]
[Text=biggest CharacterOffsetBegin=104 CharacterOffsetEnd=111 PartOfSpeech=JJS Lemma=biggest NamedEntityTag=O]
[Text=competitors CharacterOffsetBegin=112 CharacterOffsetEnd=123 PartOfSpeech=NNS Lemma=competitor NamedEntityTag=O]
[Text=. CharacterOffsetBegin=123 CharacterOffsetEnd=124 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (NNP APX))
    (VP (MD will)
      (ADVP (RB probably))
      (VP (VB be)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (PRP$ our) (JJS biggest) (NNS competitors))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, one-5)
nsubj(one-5, APX-1)
aux(one-5, will-2)
advmod(one-5, probably-3)
cop(one-5, be-4)
case(competitors-9, of-6)
nmod:poss(competitors-9, our-7)
amod(competitors-9, biggest-8)
nmod:of(one-5, competitors-9)
punct(one-5, .-10)

Extracted the following NER entity mentions:
one	NUMBER

Sentence #3 (37 tokens):
We need to get a software
system that is able to automate our trading schedules to the ISO, as well as,
schedules for anyone else we sign up to represent them as their QSE.

Tokens:
[Text=We CharacterOffsetBegin=126 CharacterOffsetEnd=128 PartOfSpeech=PRP Lemma=we NamedEntityTag=O]
[Text=need CharacterOffsetBegin=129 CharacterOffsetEnd=133 PartOfSpeech=VBP Lemma=need NamedEntityTag=O]
[Text=to CharacterOffsetBegin=134 CharacterOffsetEnd=136 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=get CharacterOffsetBegin=137 CharacterOffsetEnd=140 PartOfSpeech=VB Lemma=get NamedEntityTag=O]
[Text=a CharacterOffsetBegin=141 CharacterOffsetEnd=142 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=software CharacterOffsetBegin=143 CharacterOffsetEnd=151 PartOfSpeech=NN Lemma=software NamedEntityTag=O]
[Text=system CharacterOffsetBegin=152 CharacterOffsetEnd=158 PartOfSpeech=NN Lemma=system NamedEntityTag=O]
[Text=that CharacterOffsetBegin=159 CharacterOffsetEnd=163 PartOfSpeech=WDT Lemma=that NamedEntityTag=O]
[Text=is CharacterOffsetBegin=164 CharacterOffsetEnd=166 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=able CharacterOffsetBegin=167 CharacterOffsetEnd=171 PartOfSpeech=JJ Lemma=able NamedEntityTag=O]
[Text=to CharacterOffsetBegin=172 CharacterOffsetEnd=174 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=automate CharacterOffsetBegin=175 CharacterOffsetEnd=183 PartOfSpeech=VB Lemma=automate NamedEntityTag=O]
[Text=our CharacterOffsetBegin=184 CharacterOffsetEnd=187 PartOfSpeech=PRP$ Lemma=we NamedEntityTag=O]
[Text=trading CharacterOffsetBegin=188 CharacterOffsetEnd=195 PartOfSpeech=NN Lemma=trading NamedEntityTag=O]
[Text=schedules CharacterOffsetBegin=196 CharacterOffsetEnd=205 PartOfSpeech=NNS Lemma=schedule NamedEntityTag=O]
[Text=to CharacterOffsetBegin=206 CharacterOffsetEnd=208 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=209 CharacterOffsetEnd=212 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=ISO CharacterOffsetBegin=213 CharacterOffsetEnd=216 PartOfSpeech=NN Lemma=iso NamedEntityTag=ORGANIZATION]
[Text=, CharacterOffsetBegin=216 CharacterOffsetEnd=217 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=as CharacterOffsetBegin=218 CharacterOffsetEnd=220 PartOfSpeech=RB Lemma=as NamedEntityTag=O]
[Text=well CharacterOffsetBegin=221 CharacterOffsetEnd=225 PartOfSpeech=RB Lemma=well NamedEntityTag=O]
[Text=as CharacterOffsetBegin=226 CharacterOffsetEnd=228 PartOfSpeech=IN Lemma=as NamedEntityTag=O]
[Text=, CharacterOffsetBegin=228 CharacterOffsetEnd=229 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=schedules CharacterOffsetBegin=230 CharacterOffsetEnd=239 PartOfSpeech=NNS Lemma=schedule NamedEntityTag=O]
[Text=for CharacterOffsetBegin=240 CharacterOffsetEnd=243 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=anyone CharacterOffsetBegin=244 CharacterOffsetEnd=250 PartOfSpeech=NN Lemma=anyone NamedEntityTag=O]
[Text=else CharacterOffsetBegin=251 CharacterOffsetEnd=255 PartOfSpeech=RB Lemma=else NamedEntityTag=O]
[Text=we CharacterOffsetBegin=256 CharacterOffsetEnd=258 PartOfSpeech=PRP Lemma=we NamedEntityTag=O]
[Text=sign CharacterOffsetBegin=259 CharacterOffsetEnd=263 PartOfSpeech=VB Lemma=sign NamedEntityTag=O]
[Text=up CharacterOffsetBegin=264 CharacterOffsetEnd=266 PartOfSpeech=RP Lemma=up NamedEntityTag=O]
[Text=to CharacterOffsetBegin=267 CharacterOffsetEnd=269 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=represent CharacterOffsetBegin=270 CharacterOffsetEnd=279 PartOfSpeech=VB Lemma=represent NamedEntityTag=O]
[Text=them CharacterOffsetBegin=280 CharacterOffsetEnd=284 PartOfSpeech=PRP Lemma=they NamedEntityTag=O]
[Text=as CharacterOffsetBegin=285 CharacterOffsetEnd=287 PartOfSpeech=IN Lemma=as NamedEntityTag=O]
[Text=their CharacterOffsetBegin=288 CharacterOffsetEnd=293 PartOfSpeech=PRP$ Lemma=they NamedEntityTag=O]
[Text=QSE CharacterOffsetBegin=294 CharacterOffsetEnd=297 PartOfSpeech=NN Lemma=qse NamedEntityTag=O]
[Text=. CharacterOffsetBegin=297 CharacterOffsetEnd=298 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (PRP We))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB get)
            (NP
              (NP
                (NP (DT a) (NN software) (NN system))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ able)
                        (S
                          (VP (TO to)
                            (VP (VB automate)
                              (NP (PRP$ our) (NN trading) (NNS schedules))
                              (PP
                                (PP (TO to)
                                  (NP (DT the) (NN ISO)))
                                (, ,)
                                (CONJP (RB as) (RB well))
                                (PP (IN as)))))))))))
              (, ,)
              (NP
                (NP (NNS schedules))
                (PP (IN for)
                  (NP
                    (NP (NN anyone) (RB else))
                    (SBAR
                      (S
                        (NP (PRP we))
                        (VP (VB sign)
                          (PRT (RP up))
                          (S
                            (VP (TO to)
                              (VP (VB represent)
                                (NP (PRP them))
                                (PP (IN as)
                                  (NP (PRP$ their) (NN QSE)))))))))))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, need-2)
nsubj(need-2, We-1)
nsubj:xsubj(get-4, We-1)
mark(get-4, to-3)
xcomp(need-2, get-4)
det(system-7, a-5)
compound(system-7, software-6)
dobj(get-4, system-7)
nsubj(able-10, system-7)
nsubj:xsubj(automate-12, system-7)
ref(system-7, that-8)
cop(able-10, is-9)
acl:relcl(system-7, able-10)
mark(automate-12, to-11)
xcomp(able-10, automate-12)
nmod:poss(schedules-15, our-13)
compound(schedules-15, trading-14)
dobj(automate-12, schedules-15)
case(ISO-18, to-16)
det(ISO-18, the-17)
nmod:to(automate-12, ISO-18)
punct(ISO-18, ,-19)
cc(ISO-18, as-20)
mwe(as-20, well-21)
nmod:to(automate-12, as-22)
conj:and(ISO-18, as-22)
punct(system-7, ,-23)
appos(system-7, schedules-24)
case(anyone-26, for-25)
nmod:for(schedules-24, anyone-26)
advmod(anyone-26, else-27)
nsubj(sign-29, we-28)
nsubj:xsubj(represent-32, we-28)
acl:relcl(anyone-26, sign-29)
compound:prt(sign-29, up-30)
mark(represent-32, to-31)
xcomp(sign-29, represent-32)
dobj(represent-32, them-33)
case(QSE-36, as-34)
nmod:poss(QSE-36, their-35)
nmod:as(represent-32, QSE-36)
punct(need-2, .-37)

Extracted the following NER entity mentions:
ISO	ORGANIZATION

Sentence #4 (2 tokens):
- Mike

Tokens:
[Text=- CharacterOffsetBegin=300 CharacterOffsetEnd=301 PartOfSpeech=: Lemma=- NamedEntityTag=O]
[Text=Mike CharacterOffsetBegin=302 CharacterOffsetEnd=306 PartOfSpeech=NNP Lemma=Mike NamedEntityTag=PERSON]

Constituency parse: 
(ROOT
  (NP (: -) (NNP Mike)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, Mike-2)
punct(Mike-2, --1)

Extracted the following NER entity mentions:
Mike	PERSON

Coreference set:
	(3,1,[1,2]) -> (1,1,[1,2]), that is: "We" -> "We"
	(3,13,[13,14]) -> (1,1,[1,2]), that is: "our" -> "We"
	(3,28,[28,29]) -> (1,1,[1,2]), that is: "we" -> "We"

Coreference set:
	(3,33,[33,34]) -> (1,5,[5,6]), that is: "them" -> "people"
	(3,35,[35,36]) -> (1,5,[5,6]), that is: "their" -> "people"
