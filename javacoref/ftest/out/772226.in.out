Document: ID=772226.in (7 sentences, 183 tokens)

Sentence #1 (26 tokens):
Ranelle, John and Michelle,  thought I would send this statement to you and see if this
helps simplify our answer to your question.

Tokens:
[Text=Ranelle CharacterOffsetBegin=0 CharacterOffsetEnd=7 PartOfSpeech=NNP Lemma=Ranelle NamedEntityTag=PERSON]
[Text=, CharacterOffsetBegin=7 CharacterOffsetEnd=8 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=John CharacterOffsetBegin=9 CharacterOffsetEnd=13 PartOfSpeech=NNP Lemma=John NamedEntityTag=PERSON]
[Text=and CharacterOffsetBegin=14 CharacterOffsetEnd=17 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=Michelle CharacterOffsetBegin=18 CharacterOffsetEnd=26 PartOfSpeech=NNP Lemma=Michelle NamedEntityTag=PERSON]
[Text=, CharacterOffsetBegin=26 CharacterOffsetEnd=27 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=thought CharacterOffsetBegin=29 CharacterOffsetEnd=36 PartOfSpeech=VBD Lemma=think NamedEntityTag=O]
[Text=I CharacterOffsetBegin=37 CharacterOffsetEnd=38 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=would CharacterOffsetBegin=39 CharacterOffsetEnd=44 PartOfSpeech=MD Lemma=would NamedEntityTag=O]
[Text=send CharacterOffsetBegin=45 CharacterOffsetEnd=49 PartOfSpeech=VB Lemma=send NamedEntityTag=O]
[Text=this CharacterOffsetBegin=50 CharacterOffsetEnd=54 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=statement CharacterOffsetBegin=55 CharacterOffsetEnd=64 PartOfSpeech=NN Lemma=statement NamedEntityTag=O]
[Text=to CharacterOffsetBegin=65 CharacterOffsetEnd=67 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=you CharacterOffsetBegin=68 CharacterOffsetEnd=71 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=and CharacterOffsetBegin=72 CharacterOffsetEnd=75 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=see CharacterOffsetBegin=76 CharacterOffsetEnd=79 PartOfSpeech=VB Lemma=see NamedEntityTag=O]
[Text=if CharacterOffsetBegin=80 CharacterOffsetEnd=82 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=this CharacterOffsetBegin=83 CharacterOffsetEnd=87 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=helps CharacterOffsetBegin=88 CharacterOffsetEnd=93 PartOfSpeech=VBZ Lemma=help NamedEntityTag=O]
[Text=simplify CharacterOffsetBegin=94 CharacterOffsetEnd=102 PartOfSpeech=VB Lemma=simplify NamedEntityTag=O]
[Text=our CharacterOffsetBegin=103 CharacterOffsetEnd=106 PartOfSpeech=PRP$ Lemma=we NamedEntityTag=O]
[Text=answer CharacterOffsetBegin=107 CharacterOffsetEnd=113 PartOfSpeech=NN Lemma=answer NamedEntityTag=O]
[Text=to CharacterOffsetBegin=114 CharacterOffsetEnd=116 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=your CharacterOffsetBegin=117 CharacterOffsetEnd=121 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O]
[Text=question CharacterOffsetBegin=122 CharacterOffsetEnd=130 PartOfSpeech=NN Lemma=question NamedEntityTag=O]
[Text=. CharacterOffsetBegin=130 CharacterOffsetEnd=131 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP
      (NP (NNP Ranelle))
      (, ,)
      (NP (NNP John)
        (CC and)
        (NNP Michelle))
      (, ,))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD would)
            (VP
              (VP (VB send)
                (NP (DT this) (NN statement))
                (PP (TO to)
                  (NP (PRP you))))
              (CC and)
              (VP (VB see)
                (SBAR (IN if)
                  (S
                    (NP (DT this))
                    (VP (VBZ helps)
                      (VP (VB simplify)
                        (NP (PRP$ our) (NN answer))
                        (PP (TO to)
                          (NP (PRP$ your) (NN question)))))))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, thought-7)
nsubj(thought-7, Ranelle-1)
punct(Ranelle-1, ,-2)
appos(Ranelle-1, John-3)
cc(John-3, and-4)
appos(Ranelle-1, Michelle-5)
conj:and(John-3, Michelle-5)
punct(Ranelle-1, ,-6)
nsubj(send-10, I-8)
nsubj(see-16, I-8)
aux(send-10, would-9)
ccomp(thought-7, send-10)
det(statement-12, this-11)
dobj(send-10, statement-12)
case(you-14, to-13)
nmod:to(send-10, you-14)
cc(send-10, and-15)
ccomp(thought-7, see-16)
conj:and(send-10, see-16)
mark(helps-19, if-17)
nsubj(helps-19, this-18)
advcl:if(see-16, helps-19)
xcomp(helps-19, simplify-20)
nmod:poss(answer-22, our-21)
dobj(simplify-20, answer-22)
case(question-25, to-23)
nmod:poss(question-25, your-24)
nmod:to(simplify-20, question-25)
punct(thought-7, .-26)

Extracted the following NER entity mentions:
Ranelle	PERSON
John	PERSON
Michelle	PERSON

Sentence #2 (70 tokens):
The question is:  How is MDQ used in the nomination system to ensure we do not
double up on MDQ volumes when we have split paths (i.e. nom on same contract
from (1) Mid 15 to Bushton Inlet and from (2) Bushton Outlet to Demac)
For Nominating purposes:
MDQ of contract = Primary Firm + Alternate Firm up to the MDQ.

Tokens:
[Text=The CharacterOffsetBegin=132 CharacterOffsetEnd=135 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=question CharacterOffsetBegin=136 CharacterOffsetEnd=144 PartOfSpeech=NN Lemma=question NamedEntityTag=O]
[Text=is CharacterOffsetBegin=145 CharacterOffsetEnd=147 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=: CharacterOffsetBegin=147 CharacterOffsetEnd=148 PartOfSpeech=: Lemma=: NamedEntityTag=O]
[Text=How CharacterOffsetBegin=150 CharacterOffsetEnd=153 PartOfSpeech=WRB Lemma=how NamedEntityTag=O]
[Text=is CharacterOffsetBegin=154 CharacterOffsetEnd=156 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=MDQ CharacterOffsetBegin=157 CharacterOffsetEnd=160 PartOfSpeech=NNP Lemma=MDQ NamedEntityTag=O]
[Text=used CharacterOffsetBegin=161 CharacterOffsetEnd=165 PartOfSpeech=VBN Lemma=use NamedEntityTag=O]
[Text=in CharacterOffsetBegin=166 CharacterOffsetEnd=168 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=the CharacterOffsetBegin=169 CharacterOffsetEnd=172 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=nomination CharacterOffsetBegin=173 CharacterOffsetEnd=183 PartOfSpeech=NN Lemma=nomination NamedEntityTag=O]
[Text=system CharacterOffsetBegin=184 CharacterOffsetEnd=190 PartOfSpeech=NN Lemma=system NamedEntityTag=O]
[Text=to CharacterOffsetBegin=191 CharacterOffsetEnd=193 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=ensure CharacterOffsetBegin=194 CharacterOffsetEnd=200 PartOfSpeech=VB Lemma=ensure NamedEntityTag=O]
[Text=we CharacterOffsetBegin=201 CharacterOffsetEnd=203 PartOfSpeech=PRP Lemma=we NamedEntityTag=O]
[Text=do CharacterOffsetBegin=204 CharacterOffsetEnd=206 PartOfSpeech=VBP Lemma=do NamedEntityTag=O]
[Text=not CharacterOffsetBegin=207 CharacterOffsetEnd=210 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=double CharacterOffsetBegin=211 CharacterOffsetEnd=217 PartOfSpeech=VB Lemma=double NamedEntityTag=O]
[Text=up CharacterOffsetBegin=218 CharacterOffsetEnd=220 PartOfSpeech=RP Lemma=up NamedEntityTag=O]
[Text=on CharacterOffsetBegin=221 CharacterOffsetEnd=223 PartOfSpeech=IN Lemma=on NamedEntityTag=O]
[Text=MDQ CharacterOffsetBegin=224 CharacterOffsetEnd=227 PartOfSpeech=NN Lemma=mdq NamedEntityTag=O]
[Text=volumes CharacterOffsetBegin=228 CharacterOffsetEnd=235 PartOfSpeech=NNS Lemma=volume NamedEntityTag=O]
[Text=when CharacterOffsetBegin=236 CharacterOffsetEnd=240 PartOfSpeech=WRB Lemma=when NamedEntityTag=O]
[Text=we CharacterOffsetBegin=241 CharacterOffsetEnd=243 PartOfSpeech=PRP Lemma=we NamedEntityTag=O]
[Text=have CharacterOffsetBegin=244 CharacterOffsetEnd=248 PartOfSpeech=VBP Lemma=have NamedEntityTag=O]
[Text=split CharacterOffsetBegin=249 CharacterOffsetEnd=254 PartOfSpeech=VBN Lemma=split NamedEntityTag=O]
[Text=paths CharacterOffsetBegin=255 CharacterOffsetEnd=260 PartOfSpeech=NNS Lemma=path NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=261 CharacterOffsetEnd=262 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=i.e. CharacterOffsetBegin=262 CharacterOffsetEnd=266 PartOfSpeech=FW Lemma=i.e. NamedEntityTag=O]
[Text=nom CharacterOffsetBegin=267 CharacterOffsetEnd=270 PartOfSpeech=FW Lemma=nom NamedEntityTag=O]
[Text=on CharacterOffsetBegin=271 CharacterOffsetEnd=273 PartOfSpeech=IN Lemma=on NamedEntityTag=O]
[Text=same CharacterOffsetBegin=274 CharacterOffsetEnd=278 PartOfSpeech=JJ Lemma=same NamedEntityTag=O]
[Text=contract CharacterOffsetBegin=279 CharacterOffsetEnd=287 PartOfSpeech=NN Lemma=contract NamedEntityTag=O]
[Text=from CharacterOffsetBegin=288 CharacterOffsetEnd=292 PartOfSpeech=IN Lemma=from NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=293 CharacterOffsetEnd=294 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=1 CharacterOffsetBegin=294 CharacterOffsetEnd=295 PartOfSpeech=LS Lemma=1 NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=295 CharacterOffsetEnd=296 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=Mid CharacterOffsetBegin=297 CharacterOffsetEnd=300 PartOfSpeech=NNP Lemma=Mid NamedEntityTag=O]
[Text=15 CharacterOffsetBegin=301 CharacterOffsetEnd=303 PartOfSpeech=CD Lemma=15 NamedEntityTag=NUMBER NormalizedNamedEntityTag=15.0]
[Text=to CharacterOffsetBegin=304 CharacterOffsetEnd=306 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=Bushton CharacterOffsetBegin=307 CharacterOffsetEnd=314 PartOfSpeech=NNP Lemma=Bushton NamedEntityTag=LOCATION]
[Text=Inlet CharacterOffsetBegin=315 CharacterOffsetEnd=320 PartOfSpeech=NNP Lemma=Inlet NamedEntityTag=LOCATION]
[Text=and CharacterOffsetBegin=321 CharacterOffsetEnd=324 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=from CharacterOffsetBegin=325 CharacterOffsetEnd=329 PartOfSpeech=IN Lemma=from NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=330 CharacterOffsetEnd=331 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=2 CharacterOffsetBegin=331 CharacterOffsetEnd=332 PartOfSpeech=LS Lemma=2 NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=332 CharacterOffsetEnd=333 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=Bushton CharacterOffsetBegin=334 CharacterOffsetEnd=341 PartOfSpeech=NNP Lemma=Bushton NamedEntityTag=ORGANIZATION]
[Text=Outlet CharacterOffsetBegin=342 CharacterOffsetEnd=348 PartOfSpeech=NNP Lemma=Outlet NamedEntityTag=ORGANIZATION]
[Text=to CharacterOffsetBegin=349 CharacterOffsetEnd=351 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=Demac CharacterOffsetBegin=352 CharacterOffsetEnd=357 PartOfSpeech=NNP Lemma=Demac NamedEntityTag=LOCATION]
[Text=-RRB- CharacterOffsetBegin=357 CharacterOffsetEnd=358 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=For CharacterOffsetBegin=359 CharacterOffsetEnd=362 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=Nominating CharacterOffsetBegin=363 CharacterOffsetEnd=373 PartOfSpeech=VBG Lemma=nominate NamedEntityTag=O]
[Text=purposes CharacterOffsetBegin=374 CharacterOffsetEnd=382 PartOfSpeech=NNS Lemma=purpose NamedEntityTag=O]
[Text=: CharacterOffsetBegin=382 CharacterOffsetEnd=383 PartOfSpeech=: Lemma=: NamedEntityTag=O]
[Text=MDQ CharacterOffsetBegin=384 CharacterOffsetEnd=387 PartOfSpeech=NN Lemma=mdq NamedEntityTag=O]
[Text=of CharacterOffsetBegin=388 CharacterOffsetEnd=390 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=contract CharacterOffsetBegin=391 CharacterOffsetEnd=399 PartOfSpeech=NN Lemma=contract NamedEntityTag=O]
[Text== CharacterOffsetBegin=400 CharacterOffsetEnd=401 PartOfSpeech=JJ Lemma== NamedEntityTag=O]
[Text=Primary CharacterOffsetBegin=402 CharacterOffsetEnd=409 PartOfSpeech=JJ Lemma=primary NamedEntityTag=O]
[Text=Firm CharacterOffsetBegin=410 CharacterOffsetEnd=414 PartOfSpeech=NN Lemma=firm NamedEntityTag=O]
[Text=+ CharacterOffsetBegin=415 CharacterOffsetEnd=416 PartOfSpeech=CC Lemma=+ NamedEntityTag=O]
[Text=Alternate CharacterOffsetBegin=417 CharacterOffsetEnd=426 PartOfSpeech=JJ Lemma=alternate NamedEntityTag=O]
[Text=Firm CharacterOffsetBegin=427 CharacterOffsetEnd=431 PartOfSpeech=NN Lemma=firm NamedEntityTag=O]
[Text=up CharacterOffsetBegin=432 CharacterOffsetEnd=434 PartOfSpeech=IN Lemma=up NamedEntityTag=O]
[Text=to CharacterOffsetBegin=435 CharacterOffsetEnd=437 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=438 CharacterOffsetEnd=441 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=MDQ CharacterOffsetBegin=442 CharacterOffsetEnd=445 PartOfSpeech=NNP Lemma=MDQ NamedEntityTag=O]
[Text=. CharacterOffsetBegin=445 CharacterOffsetEnd=446 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (DT The) (NN question))
    (VP (VBZ is) (: :)
      (SBARQ
        (WHADVP (WRB How))
        (SQ (VBZ is)
          (NP (NNP MDQ))
          (VP (VBN used)
            (PP (IN in)
              (NP (DT the) (NN nomination) (NN system)))
            (S
              (VP (TO to)
                (VP (VB ensure)
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (VBP do) (RB not)
                        (VP (VB double)
                          (PRT (RP up))
                          (PP (IN on)
                            (NP (NN MDQ) (NNS volumes)))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP we))
                              (VP (VBP have)
                                (VP (VBN split)
                                  (NP
                                    (NP (NNS paths))
                                    (PRN (-LRB- -LRB-)
                                      (NP
                                        (NP (FW i.e.) (FW nom))
                                        (PP (IN on)
                                          (NP
                                            (NP (JJ same) (NN contract))
                                            (PP (IN from)
                                              (NP
                                                (NP
                                                  (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
                                                  (NP (NNP Mid) (CD 15))
                                                  (PP
                                                    (PP (TO to)
                                                      (NP (NNP Bushton) (NNP Inlet)))
                                                    (CC and)
                                                    (PP (IN from))))
                                                (NP
                                                  (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
                                                  (NP (NNP Bushton) (NNP Outlet))
                                                  (PP (TO to)
                                                    (NP (NNP Demac)))))))))
                                      (-RRB- -RRB-)))
                                  (PP (IN For)
                                    (S
                                      (VP (VBG Nominating)
                                        (NP
                                          (NP (NNS purposes))
                                          (: :)
                                          (NP
                                            (NP (NN MDQ))
                                            (PP (IN of)
                                              (NP
                                                (NP (NN contract) (JJ =) (JJ Primary) (NN Firm))
                                                (CC +)
                                                (NP (JJ Alternate) (NN Firm))
                                                (ADVP (IN up)
                                                  (PP (TO to)
                                                    (NP (DT the) (NNP MDQ))))))))))))))))))))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, is-3)
det(question-2, The-1)
nsubj(is-3, question-2)
punct(is-3, :-4)
advmod(used-8, How-5)
auxpass(used-8, is-6)
nsubjpass(used-8, MDQ-7)
nsubj:xsubj(ensure-14, MDQ-7)
ccomp(is-3, used-8)
case(system-12, in-9)
det(system-12, the-10)
compound(system-12, nomination-11)
nmod:in(used-8, system-12)
mark(ensure-14, to-13)
xcomp(used-8, ensure-14)
nsubj(double-18, we-15)
aux(double-18, do-16)
neg(double-18, not-17)
ccomp(ensure-14, double-18)
compound:prt(double-18, up-19)
case(volumes-22, on-20)
compound(volumes-22, MDQ-21)
nmod:on(double-18, volumes-22)
advmod(split-26, when-23)
nsubj(split-26, we-24)
aux(split-26, have-25)
advcl(double-18, split-26)
dobj(split-26, paths-27)
punct(nom-30, -LRB--28)
compound(nom-30, i.e.-29)
dep(paths-27, nom-30)
case(contract-33, on-31)
amod(contract-33, same-32)
nmod:on(nom-30, contract-33)
case(Mid-38, from-34)
punct(1-36, -LRB--35)
dep(Mid-38, 1-36)
punct(1-36, -RRB--37)
nmod:from(contract-33, Mid-38)
nummod(Mid-38, 15-39)
case(Inlet-42, to-40)
compound(Inlet-42, Bushton-41)
nmod:to(Mid-38, Inlet-42)
cc(Inlet-42, and-43)
nmod:to(Mid-38, from-44)
conj:and(Inlet-42, from-44)
punct(2-46, -LRB--45)
dep(Outlet-49, 2-46)
punct(2-46, -RRB--47)
compound(Outlet-49, Bushton-48)
dep(Mid-38, Outlet-49)
case(Demac-51, to-50)
nmod:to(Outlet-49, Demac-51)
punct(nom-30, -RRB--52)
mark(Nominating-54, For-53)
advcl:for(split-26, Nominating-54)
dobj(Nominating-54, purposes-55)
punct(purposes-55, :-56)
dep(purposes-55, MDQ-57)
case(Firm-62, of-58)
compound(Firm-62, contract-59)
amod(Firm-62, =-60)
amod(Firm-62, Primary-61)
nmod:of(MDQ-57, Firm-62)
cc(Firm-62, +-63)
amod(Firm-65, Alternate-64)
nmod:of(MDQ-57, Firm-65)
conj:+(Firm-62, Firm-65)
advmod(Firm-62, up-66)
case(MDQ-69, to-67)
det(MDQ-69, the-68)
nmod:to(up-66, MDQ-69)
punct(is-3, .-70)

Extracted the following NER entity mentions:
15	NUMBER
Bushton Inlet	LOCATION
Bushton Outlet	ORGANIZATION
Demac	LOCATION

Sentence #3 (14 tokens):
Anything over the MDQ will be Overrun and charged at the IT rate.

Tokens:
[Text=Anything CharacterOffsetBegin=447 CharacterOffsetEnd=455 PartOfSpeech=NN Lemma=anything NamedEntityTag=O]
[Text=over CharacterOffsetBegin=456 CharacterOffsetEnd=460 PartOfSpeech=IN Lemma=over NamedEntityTag=O]
[Text=the CharacterOffsetBegin=461 CharacterOffsetEnd=464 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=MDQ CharacterOffsetBegin=465 CharacterOffsetEnd=468 PartOfSpeech=NN Lemma=mdq NamedEntityTag=O]
[Text=will CharacterOffsetBegin=469 CharacterOffsetEnd=473 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=be CharacterOffsetBegin=474 CharacterOffsetEnd=476 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=Overrun CharacterOffsetBegin=477 CharacterOffsetEnd=484 PartOfSpeech=NNP Lemma=Overrun NamedEntityTag=O]
[Text=and CharacterOffsetBegin=485 CharacterOffsetEnd=488 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=charged CharacterOffsetBegin=489 CharacterOffsetEnd=496 PartOfSpeech=VBN Lemma=charge NamedEntityTag=O]
[Text=at CharacterOffsetBegin=497 CharacterOffsetEnd=499 PartOfSpeech=IN Lemma=at NamedEntityTag=O]
[Text=the CharacterOffsetBegin=500 CharacterOffsetEnd=503 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=IT CharacterOffsetBegin=504 CharacterOffsetEnd=506 PartOfSpeech=NNP Lemma=IT NamedEntityTag=O]
[Text=rate CharacterOffsetBegin=507 CharacterOffsetEnd=511 PartOfSpeech=NN Lemma=rate NamedEntityTag=O]
[Text=. CharacterOffsetBegin=511 CharacterOffsetEnd=512 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP
      (NP (NN Anything))
      (PP (IN over)
        (NP (DT the) (NN MDQ))))
    (VP (MD will)
      (VP (VB be)
        (UCP
          (NP (NNP Overrun))
          (CC and)
          (VP (VBN charged)
            (PP (IN at)
              (NP (DT the) (NNP IT) (NN rate)))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, Overrun-7)
nsubj(Overrun-7, Anything-1)
case(MDQ-4, over-2)
det(MDQ-4, the-3)
nmod:over(Anything-1, MDQ-4)
aux(Overrun-7, will-5)
cop(Overrun-7, be-6)
cc(Overrun-7, and-8)
acl(Overrun-7, charged-9)
case(rate-13, at-10)
det(rate-13, the-11)
compound(rate-13, IT-12)
nmod:at(charged-9, rate-13)
punct(Overrun-7, .-14)

Extracted the following NER entity mentions:

Sentence #4 (12 tokens):
Point MDQ needs to be considered when allocating a receipt point.

Tokens:
[Text=Point CharacterOffsetBegin=513 CharacterOffsetEnd=518 PartOfSpeech=NN Lemma=point NamedEntityTag=O]
[Text=MDQ CharacterOffsetBegin=519 CharacterOffsetEnd=522 PartOfSpeech=NN Lemma=mdq NamedEntityTag=O]
[Text=needs CharacterOffsetBegin=523 CharacterOffsetEnd=528 PartOfSpeech=VBZ Lemma=need NamedEntityTag=O]
[Text=to CharacterOffsetBegin=529 CharacterOffsetEnd=531 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=be CharacterOffsetBegin=532 CharacterOffsetEnd=534 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=considered CharacterOffsetBegin=535 CharacterOffsetEnd=545 PartOfSpeech=VBN Lemma=consider NamedEntityTag=O]
[Text=when CharacterOffsetBegin=546 CharacterOffsetEnd=550 PartOfSpeech=WRB Lemma=when NamedEntityTag=O]
[Text=allocating CharacterOffsetBegin=551 CharacterOffsetEnd=561 PartOfSpeech=VBG Lemma=allocate NamedEntityTag=O]
[Text=a CharacterOffsetBegin=562 CharacterOffsetEnd=563 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=receipt CharacterOffsetBegin=564 CharacterOffsetEnd=571 PartOfSpeech=NN Lemma=receipt NamedEntityTag=O]
[Text=point CharacterOffsetBegin=572 CharacterOffsetEnd=577 PartOfSpeech=NN Lemma=point NamedEntityTag=O]
[Text=. CharacterOffsetBegin=577 CharacterOffsetEnd=578 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (NN Point) (NN MDQ))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN considered)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (VP (VBG allocating)
                    (NP (DT a) (NN receipt) (NN point))))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, needs-3)
compound(MDQ-2, Point-1)
nsubj(needs-3, MDQ-2)
nsubjpass:xsubj(considered-6, MDQ-2)
mark(considered-6, to-4)
auxpass(considered-6, be-5)
xcomp(needs-3, considered-6)
advmod(allocating-8, when-7)
advcl(considered-6, allocating-8)
det(point-11, a-9)
compound(point-11, receipt-10)
dobj(allocating-8, point-11)
punct(needs-3, .-12)

Extracted the following NER entity mentions:

Sentence #5 (35 tokens):
EXAMPLE:
If the Field MDQ is 10,000, then we will  (1) total the reciepts nominated on the
contract; (2) compare the total nominated to the Contract MDQ.

Tokens:
[Text=EXAMPLE CharacterOffsetBegin=579 CharacterOffsetEnd=586 PartOfSpeech=NN Lemma=example NamedEntityTag=O]
[Text=: CharacterOffsetBegin=586 CharacterOffsetEnd=587 PartOfSpeech=: Lemma=: NamedEntityTag=O]
[Text=If CharacterOffsetBegin=588 CharacterOffsetEnd=590 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=the CharacterOffsetBegin=591 CharacterOffsetEnd=594 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=Field CharacterOffsetBegin=595 CharacterOffsetEnd=600 PartOfSpeech=NN Lemma=field NamedEntityTag=O]
[Text=MDQ CharacterOffsetBegin=601 CharacterOffsetEnd=604 PartOfSpeech=NN Lemma=mdq NamedEntityTag=O]
[Text=is CharacterOffsetBegin=605 CharacterOffsetEnd=607 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=10,000 CharacterOffsetBegin=608 CharacterOffsetEnd=614 PartOfSpeech=CD Lemma=10,000 NamedEntityTag=NUMBER NormalizedNamedEntityTag=10000.0]
[Text=, CharacterOffsetBegin=614 CharacterOffsetEnd=615 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=then CharacterOffsetBegin=616 CharacterOffsetEnd=620 PartOfSpeech=RB Lemma=then NamedEntityTag=O]
[Text=we CharacterOffsetBegin=621 CharacterOffsetEnd=623 PartOfSpeech=PRP Lemma=we NamedEntityTag=O]
[Text=will CharacterOffsetBegin=624 CharacterOffsetEnd=628 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=630 CharacterOffsetEnd=631 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=1 CharacterOffsetBegin=631 CharacterOffsetEnd=632 PartOfSpeech=LS Lemma=1 NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=632 CharacterOffsetEnd=633 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=total CharacterOffsetBegin=634 CharacterOffsetEnd=639 PartOfSpeech=VBP Lemma=total NamedEntityTag=O]
[Text=the CharacterOffsetBegin=640 CharacterOffsetEnd=643 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=reciepts CharacterOffsetBegin=644 CharacterOffsetEnd=652 PartOfSpeech=NNS Lemma=reciept NamedEntityTag=O]
[Text=nominated CharacterOffsetBegin=653 CharacterOffsetEnd=662 PartOfSpeech=VBN Lemma=nominate NamedEntityTag=O]
[Text=on CharacterOffsetBegin=663 CharacterOffsetEnd=665 PartOfSpeech=IN Lemma=on NamedEntityTag=O]
[Text=the CharacterOffsetBegin=666 CharacterOffsetEnd=669 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=contract CharacterOffsetBegin=670 CharacterOffsetEnd=678 PartOfSpeech=NN Lemma=contract NamedEntityTag=O]
[Text=; CharacterOffsetBegin=678 CharacterOffsetEnd=679 PartOfSpeech=: Lemma=; NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=680 CharacterOffsetEnd=681 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=2 CharacterOffsetBegin=681 CharacterOffsetEnd=682 PartOfSpeech=LS Lemma=2 NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=682 CharacterOffsetEnd=683 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=compare CharacterOffsetBegin=684 CharacterOffsetEnd=691 PartOfSpeech=VB Lemma=compare NamedEntityTag=O]
[Text=the CharacterOffsetBegin=692 CharacterOffsetEnd=695 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=total CharacterOffsetBegin=696 CharacterOffsetEnd=701 PartOfSpeech=JJ Lemma=total NamedEntityTag=O]
[Text=nominated CharacterOffsetBegin=702 CharacterOffsetEnd=711 PartOfSpeech=VBN Lemma=nominate NamedEntityTag=O]
[Text=to CharacterOffsetBegin=712 CharacterOffsetEnd=714 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=715 CharacterOffsetEnd=718 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=Contract CharacterOffsetBegin=719 CharacterOffsetEnd=727 PartOfSpeech=NN Lemma=contract NamedEntityTag=O]
[Text=MDQ CharacterOffsetBegin=728 CharacterOffsetEnd=731 PartOfSpeech=NN Lemma=mdq NamedEntityTag=O]
[Text=. CharacterOffsetBegin=731 CharacterOffsetEnd=732 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (FRAG
    (NP (NN EXAMPLE))
    (: :)
    (S
      (SBAR (IN If)
        (S
          (NP (DT the) (NN Field) (NN MDQ))
          (VP (VBZ is)
            (NP (CD 10,000)))))
      (, ,)
      (NP (RB then) (PRP we))
      (VP (MD will)
        (VP
          (VP
            (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
            (VBP total)
            (NP (DT the) (NNS reciepts))
            (S
              (VP (VBN nominated)
                (PP (IN on)
                  (NP (DT the) (NN contract))))))
          (: ;)
          (VP
            (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
            (VB compare)
            (NP (DT the) (JJ total))
            (S
              (VP (VBN nominated)
                (PP (TO to)
                  (NP (DT the) (NN Contract) (NN MDQ)))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, EXAMPLE-1)
punct(EXAMPLE-1, :-2)
mark(10,000-8, If-3)
det(MDQ-6, the-4)
compound(MDQ-6, Field-5)
nsubj(10,000-8, MDQ-6)
cop(10,000-8, is-7)
advcl:if(total-16, 10,000-8)
punct(total-16, ,-9)
advmod(we-11, then-10)
nsubj(total-16, we-11)
aux(total-16, will-12)
punct(1-14, -LRB--13)
dep(total-16, 1-14)
punct(1-14, -RRB--15)
appos(EXAMPLE-1, total-16)
det(reciepts-18, the-17)
dobj(total-16, reciepts-18)
dep(total-16, nominated-19)
case(contract-22, on-20)
det(contract-22, the-21)
nmod:on(nominated-19, contract-22)
punct(total-16, ;-23)
punct(2-25, -LRB--24)
dep(compare-27, 2-25)
punct(2-25, -RRB--26)
dep(total-16, compare-27)
det(total-29, the-28)
dobj(compare-27, total-29)
dep(compare-27, nominated-30)
case(MDQ-34, to-31)
det(MDQ-34, the-32)
compound(MDQ-34, Contract-33)
nmod:to(nominated-30, MDQ-34)
punct(EXAMPLE-1, .-35)

Extracted the following NER entity mentions:
10,000	NUMBER

Sentence #6 (17 tokens):
Then the shipper
will get firm (primary and alternate) up to their contract MDQ.

Tokens:
[Text=Then CharacterOffsetBegin=734 CharacterOffsetEnd=738 PartOfSpeech=RB Lemma=then NamedEntityTag=O]
[Text=the CharacterOffsetBegin=739 CharacterOffsetEnd=742 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=shipper CharacterOffsetBegin=743 CharacterOffsetEnd=750 PartOfSpeech=NN Lemma=shipper NamedEntityTag=O]
[Text=will CharacterOffsetBegin=751 CharacterOffsetEnd=755 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=get CharacterOffsetBegin=756 CharacterOffsetEnd=759 PartOfSpeech=VB Lemma=get NamedEntityTag=O]
[Text=firm CharacterOffsetBegin=760 CharacterOffsetEnd=764 PartOfSpeech=NN Lemma=firm NamedEntityTag=O]
[Text=-LRB- CharacterOffsetBegin=765 CharacterOffsetEnd=766 PartOfSpeech=-LRB- Lemma=-lrb- NamedEntityTag=O]
[Text=primary CharacterOffsetBegin=766 CharacterOffsetEnd=773 PartOfSpeech=JJ Lemma=primary NamedEntityTag=O]
[Text=and CharacterOffsetBegin=774 CharacterOffsetEnd=777 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=alternate CharacterOffsetBegin=778 CharacterOffsetEnd=787 PartOfSpeech=JJ Lemma=alternate NamedEntityTag=O]
[Text=-RRB- CharacterOffsetBegin=787 CharacterOffsetEnd=788 PartOfSpeech=-RRB- Lemma=-rrb- NamedEntityTag=O]
[Text=up CharacterOffsetBegin=789 CharacterOffsetEnd=791 PartOfSpeech=IN Lemma=up NamedEntityTag=O]
[Text=to CharacterOffsetBegin=792 CharacterOffsetEnd=794 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=their CharacterOffsetBegin=795 CharacterOffsetEnd=800 PartOfSpeech=PRP$ Lemma=they NamedEntityTag=O]
[Text=contract CharacterOffsetBegin=801 CharacterOffsetEnd=809 PartOfSpeech=NN Lemma=contract NamedEntityTag=O]
[Text=MDQ CharacterOffsetBegin=810 CharacterOffsetEnd=813 PartOfSpeech=NN Lemma=mdq NamedEntityTag=O]
[Text=. CharacterOffsetBegin=813 CharacterOffsetEnd=814 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S (RB Then)
    (NP (DT the) (NN shipper))
    (VP (MD will)
      (VP (VB get)
        (ADVP
          (NP
            (NP (NN firm))
            (PRN (-LRB- -LRB-)
              (NP (JJ primary)
                (CC and)
                (JJ alternate))
              (-RRB- -RRB-)))
          (IN up))
        (PP (TO to)
          (NP (PRP$ their) (NN contract) (NN MDQ)))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, get-5)
advmod(get-5, Then-1)
det(shipper-3, the-2)
nsubj(get-5, shipper-3)
aux(get-5, will-4)
advmod(get-5, firm-6)
punct(primary-8, -LRB--7)
dep(firm-6, primary-8)
cc(primary-8, and-9)
dep(firm-6, alternate-10)
conj:and(primary-8, alternate-10)
punct(primary-8, -RRB--11)
case(firm-6, up-12)
case(MDQ-16, to-13)
nmod:poss(MDQ-16, their-14)
compound(MDQ-16, contract-15)
nmod:to(get-5, MDQ-16)
punct(get-5, .-17)

Extracted the following NER entity mentions:

Sentence #7 (9 tokens):
Anything over will be
overrun at IT rate.

Tokens:
[Text=Anything CharacterOffsetBegin=816 CharacterOffsetEnd=824 PartOfSpeech=NN Lemma=anything NamedEntityTag=O]
[Text=over CharacterOffsetBegin=825 CharacterOffsetEnd=829 PartOfSpeech=RB Lemma=over NamedEntityTag=O]
[Text=will CharacterOffsetBegin=830 CharacterOffsetEnd=834 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=be CharacterOffsetBegin=835 CharacterOffsetEnd=837 PartOfSpeech=VB Lemma=be NamedEntityTag=O]
[Text=overrun CharacterOffsetBegin=838 CharacterOffsetEnd=845 PartOfSpeech=VBN Lemma=overrun NamedEntityTag=O]
[Text=at CharacterOffsetBegin=846 CharacterOffsetEnd=848 PartOfSpeech=IN Lemma=at NamedEntityTag=O]
[Text=IT CharacterOffsetBegin=849 CharacterOffsetEnd=851 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=rate CharacterOffsetBegin=852 CharacterOffsetEnd=856 PartOfSpeech=NN Lemma=rate NamedEntityTag=O]
[Text=. CharacterOffsetBegin=856 CharacterOffsetEnd=857 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (NN Anything))
    (ADVP (RB over))
    (VP (MD will)
      (VP (VB be)
        (VP (VBN overrun)
          (PP (IN at)
            (NP
              (NP (PRP IT))
              (NP (NN rate)))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, overrun-5)
nsubjpass(overrun-5, Anything-1)
advmod(overrun-5, over-2)
aux(overrun-5, will-3)
auxpass(overrun-5, be-4)
case(IT-7, at-6)
nmod:at(overrun-5, IT-7)
dep(IT-7, rate-8)
punct(overrun-5, .-9)

Extracted the following NER entity mentions:

Coreference set:
	(1,21,[21,22]) -> (5,11,[10,12]), that is: "our" -> "then we"
	(2,15,[15,16]) -> (5,11,[10,12]), that is: "we" -> "then we"
	(2,24,[24,25]) -> (5,11,[10,12]), that is: "we" -> "then we"

Coreference set:
	(2,2,[1,3]) -> (1,25,[24,26]), that is: "The question" -> "your question"

Coreference set:
	(2,7,[7,8]) -> (2,69,[68,70]), that is: "MDQ" -> "the MDQ"
	(2,57,[57,70]) -> (2,69,[68,70]), that is: "MDQ of contract = Primary Firm + Alternate Firm up to the MDQ" -> "the MDQ"
	(3,4,[3,5]) -> (2,69,[68,70]), that is: "the MDQ" -> "the MDQ"
	(5,34,[32,35]) -> (2,69,[68,70]), that is: "the Contract MDQ" -> "the MDQ"

Coreference set:
	(6,6,[6,12]) -> (2,62,[59,70]), that is: "firm -LRB- primary and alternate -RRB-" -> "contract = Primary Firm + Alternate Firm up to the MDQ"

Coreference set:
	(5,6,[4,7]) -> (5,8,[8,9]), that is: "the Field MDQ" -> "10,000"

Coreference set:
	(6,14,[14,15]) -> (5,18,[17,19]), that is: "their" -> "the reciepts"

Coreference set:
	(7,7,[7,9]) -> (6,16,[14,17]), that is: "IT rate" -> "their contract MDQ"
